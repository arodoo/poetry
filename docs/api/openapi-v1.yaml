# File: openapi-v1.yaml
# Purpose: Minimal OpenAPI v1 snapshot for discovery, health, and users headers.
# All Rights Reserved. Arodi Emmanuel
openapi: 3.0.3
info: { title: Poetry API, version: 1.0.0 }
paths:
  /api:
    get:
      summary: API discovery index
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: { v1: { type: string }, docs: { type: string }, swagger: { type: string } }
  /api/v1/health:
    get:
      summary: Health check
      responses:
        '200': { description: OK }
  /api/v1/users:
    get:
      summary: List users
      responses:
        '200':
          description: OK
          headers: { ETag: { description: Strong ETag of response, schema: { type: string } } }
    post:
      summary: Create user
      parameters:
        - in: header
          name: Idempotency-Key
          required: false
          schema: { type: string }
      responses:
        '200': { description: OK }
        '409': { description: Conflict (duplicate Idempotency-Key) }
  /api/v1/users/{id}:
    get:
      summary: Get user by id
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: OK
          headers: { ETag: { description: Strong ETag of response, schema: { type: string } } }
    put:
      summary: Update user
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
        - in: header
          name: If-Match
          required: true
          schema: { type: string }
        - in: header
          name: Idempotency-Key
          required: false
          schema: { type: string }
      responses:
        '200':
          description: Updated
          headers: { ETag: { description: Strong ETag of response, schema: { type: string } } }
        '409': { description: Conflict (duplicate Idempotency-Key) }
        '412': { description: Precondition Failed }
        '428': { description: Precondition Required }
    delete:
      summary: Soft delete user
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
        - in: header
          name: If-Match
          required: true
          schema: { type: string }
        - in: header
          name: Idempotency-Key
          required: false
          schema: { type: string }
      responses:
        '204': { description: No Content }
        '409': { description: Conflict (duplicate Idempotency-Key) }
        '412': { description: Precondition Failed }
        '428': { description: Precondition Required }
