#!/usr/bin/env sh

# File: .husky/pre-commit
# Purpose: Run full quality gates before committing changes (tests & CI checks).
# All Rights Reserved. Arodi Emmanuel

echo "🚀 Pre-commit checks starting..."

# === FASTEST CHECKS FIRST (< 2 seconds) ===
# These checks analyze existing files without compilation/transformation

echo "📋 Checking file headers..."
node tools/ci/headers/check-headers.mjs || {
  echo "❌ Header check failed! Check the output above for files missing headers."
  exit 1
}

echo "� Checking hardcoded colors..."
node tools/ci/colors/check-hardcoded-colors.mjs || {
  echo "❌ Color check failed! Use theme CSS variables instead of hardcoded colors."
  exit 1
}

echo "�🌐 Scanning i18n usage..."
node tools/ci/i18n/i18n-scan.mjs || {
  echo "❌ i18n scan failed! Check the output above for hardcoded strings."
  exit 1
}

echo "📋 Validating OpenAPI contract..."
npm run openapi:validate || {
  echo "❌ OpenAPI validation failed! Check the output above for contract errors."
  exit 1
}

echo "🔄 Checking SDK sync..."
npm run sdk:check || {
  echo "❌ SDK check failed! Run 'npm run sdk:sync' to fix OpenAPI drift."
  exit 1
}

echo "🏗️ Validating module structure..."
npm run modules:check || {
  echo "❌ Module structure check failed! Check the output above for missing files/folders."
  echo "   Run 'npm run modules:check' to see detailed report."
  echo "   This ensures all features follow the required DDD module structure."
  echo "   Implement missing files/folders as needed."
  exit 1
}

# === MEDIUM SPEED TASKS (2-10 seconds) ===
# These tasks process and transform files

echo "📋 Generating i18n keys..."
npm --prefix poetry-frontend run i18n:gen || {
  echo "❌ i18n key generation failed!"
  exit 1
}

echo "✅ Verifying i18n catalogs..."
npm --prefix poetry-frontend run i18n:verify || {
  echo "❌ i18n catalog verification failed!"
  exit 1
}

echo "🎨 Formatting files..."
npx lint-staged || {
  echo "❌ File formatting failed!"
  exit 1
}

echo "🎨 Linting frontend code..."
npm --prefix poetry-frontend run lint:fix -- --max-warnings=0 || {
  echo "❌ Frontend linting failed! Check the output above for specific file errors."
  exit 1
}

echo "🎨 Linting backend code..."
npm run lint:backend || {
  echo "❌ Backend linting failed! Check the output above for specific file errors."
  exit 1
}

# Moved to end to reduce refactor churn during iterative typing changes
echo "📏 Checking line limits..."
node tools/ci/limits/check-lines.mjs || {
  echo "❌ Apply necesary line limits! "
  exit 1
}

echo "✅ All pre-commit checks passed!"
