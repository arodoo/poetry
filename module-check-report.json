{
  "ok": false,
  "summary": {
    "features": 11,
    "missing": 119
  },
  "details": [
    {
      "feature": "auth",
      "expected": [
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/auth/model/Auth.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/auth/model/value/*",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/auth/port/AuthQueryPort.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/auth/port/AuthCommandPort.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/auth/usecase/GetAllAuthsUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/auth/usecase/GetAuthByIdUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/auth/usecase/CreateAuthUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/auth/usecase/UpdateAuthUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/auth/usecase/DeleteAuthUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/auth/AuthEntity.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/auth/AuthJpaRepository.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/auth/AuthJpaMapper.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/auth/AuthJpaAdapter.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/auth/InMemoryAuthAdapter.java",
          "optional": true,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/auth/InMemoryAuthStore.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/auth/InMemoryAuthFactory.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/auth/AuthController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/auth/AuthsCreateController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/auth/AuthsGetController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/auth/AuthsListController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/auth/AuthsPagedListController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/auth/AuthsUpdateController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/auth/AuthsDeleteController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/auth/AuthDtos.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/config/auth/AuthComposition.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "docs/domains/auth.md",
          "optional": false,
          "exists": false
        },
        {
          "path": "docs/api/openapi/paths/auth-*.yaml",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/auth/model/AuthTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/auth/model/AuthValidationTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/auth/usecase/CreateAuthUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/auth/usecase/CreateAuthUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/auth/usecase/GetAllAuthsUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/auth/usecase/GetAuthByIdUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/auth/usecase/GetAuthByIdUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/auth/usecase/UpdateAuthUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/auth/usecase/UpdateAuthUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/auth/usecase/DeleteAuthUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/auth/usecase/DeleteAuthUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/auth/AuthControllerTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/auth/AuthControllerNegativeTest.java",
          "optional": false,
          "exists": true
        }
      ],
      "missing": [
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/auth/AuthsCreateController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/auth/AuthsGetController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/auth/AuthsListController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/auth/AuthsPagedListController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/auth/AuthsUpdateController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/auth/AuthsDeleteController.java",
        "docs/domains/auth.md",
        "docs/api/openapi/paths/auth-*.yaml"
      ]
    },
    {
      "feature": "dashboard",
      "expected": [
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/dashboard/model/Dashboard.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/dashboard/model/value/*",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/dashboard/port/DashboardQueryPort.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/dashboard/port/DashboardCommandPort.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/dashboard/usecase/GetAllDashboardsUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/dashboard/usecase/GetDashboardByIdUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/dashboard/usecase/CreateDashboardUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/dashboard/usecase/UpdateDashboardUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/dashboard/usecase/DeleteDashboardUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/dashboard/DashboardEntity.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/dashboard/DashboardJpaRepository.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/dashboard/DashboardJpaMapper.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/dashboard/DashboardJpaAdapter.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/dashboard/InMemoryDashboardAdapter.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/dashboard/InMemoryDashboardStore.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/dashboard/InMemoryDashboardFactory.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/dashboard/DashboardController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/dashboard/DashboardsCreateController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/dashboard/DashboardsGetController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/dashboard/DashboardsListController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/dashboard/DashboardsPagedListController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/dashboard/DashboardsUpdateController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/dashboard/DashboardsDeleteController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/dashboard/DashboardDtos.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/config/dashboard/DashboardComposition.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "docs/domains/dashboard.md",
          "optional": false,
          "exists": false
        },
        {
          "path": "docs/api/openapi/paths/dashboard-*.yaml",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/dashboard/model/DashboardTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/dashboard/model/DashboardValidationTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/dashboard/usecase/CreateDashboardUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/dashboard/usecase/CreateDashboardUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/dashboard/usecase/GetAllDashboardsUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/dashboard/usecase/GetDashboardByIdUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/dashboard/usecase/GetDashboardByIdUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/dashboard/usecase/UpdateDashboardUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/dashboard/usecase/UpdateDashboardUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/dashboard/usecase/DeleteDashboardUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/dashboard/usecase/DeleteDashboardUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/dashboard/DashboardControllerTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/dashboard/DashboardControllerNegativeTest.java",
          "optional": false,
          "exists": true
        }
      ],
      "missing": [
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/dashboard/DashboardsCreateController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/dashboard/DashboardsGetController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/dashboard/DashboardsListController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/dashboard/DashboardsPagedListController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/dashboard/DashboardsUpdateController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/dashboard/DashboardsDeleteController.java",
        "docs/domains/dashboard.md",
        "docs/api/openapi/paths/dashboard-*.yaml"
      ]
    },
    {
      "feature": "events",
      "expected": [
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/events/model/Events.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/events/model/value/*",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/events/port/EventsQueryPort.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/events/port/EventsCommandPort.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/events/usecase/GetAllEventsUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/events/usecase/GetEventsByIdUseCase.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/events/usecase/CreateEventsUseCase.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/events/usecase/UpdateEventsUseCase.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/events/usecase/DeleteEventsUseCase.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/events/EventsEntity.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/events/EventsJpaRepository.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/events/EventsJpaMapper.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/events/EventsJpaAdapter.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/events/InMemoryEventsAdapter.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/events/InMemoryEventsStore.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/events/InMemoryEventsFactory.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/events/EventsController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/events/EventsCreateController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/events/EventsGetController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/events/EventsListController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/events/EventsPagedListController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/events/EventsUpdateController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/events/EventsDeleteController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/events/EventsDtos.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/config/events/EventsComposition.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "docs/domains/events.md",
          "optional": false,
          "exists": false
        },
        {
          "path": "docs/api/openapi/paths/events-*.yaml",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/events/model/EventsTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/events/model/EventsValidationTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/events/usecase/CreateEventsUseCaseTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/events/usecase/CreateEventsUseCaseNegativeTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/events/usecase/GetAllEventsUseCaseTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/events/usecase/GetEventsByIdUseCaseTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/events/usecase/GetEventsByIdUseCaseNegativeTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/events/usecase/UpdateEventsUseCaseTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/events/usecase/UpdateEventsUseCaseNegativeTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/events/usecase/DeleteEventsUseCaseTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/events/usecase/DeleteEventsUseCaseNegativeTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/events/EventsControllerTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/events/EventsControllerNegativeTest.java",
          "optional": false,
          "exists": false
        }
      ],
      "missing": [
        "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/events/model/Events.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/application/events/usecase/GetEventsByIdUseCase.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/application/events/usecase/CreateEventsUseCase.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/application/events/usecase/UpdateEventsUseCase.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/application/events/usecase/DeleteEventsUseCase.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/events/EventsEntity.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/events/EventsJpaRepository.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/events/EventsJpaMapper.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/events/EventsJpaAdapter.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/events/EventsController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/events/EventsDtos.java",
        "docs/domains/events.md",
        "docs/api/openapi/paths/events-*.yaml",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/events/model/EventsTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/events/model/EventsValidationTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/events/usecase/CreateEventsUseCaseTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/events/usecase/CreateEventsUseCaseNegativeTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/events/usecase/GetAllEventsUseCaseTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/events/usecase/GetEventsByIdUseCaseTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/events/usecase/GetEventsByIdUseCaseNegativeTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/events/usecase/UpdateEventsUseCaseTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/events/usecase/UpdateEventsUseCaseNegativeTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/events/usecase/DeleteEventsUseCaseTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/events/usecase/DeleteEventsUseCaseNegativeTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/events/EventsControllerTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/events/EventsControllerNegativeTest.java"
      ]
    },
    {
      "feature": "font",
      "expected": [
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/font/model/Font.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/font/model/value/*",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/font/port/FontQueryPort.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/font/port/FontCommandPort.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/font/usecase/GetAllFontsUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/font/usecase/GetFontByIdUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/font/usecase/CreateFontUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/font/usecase/UpdateFontUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/font/usecase/DeleteFontUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/font/FontEntity.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/font/FontJpaRepository.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/font/FontJpaMapper.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/font/FontJpaAdapter.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/font/InMemoryFontAdapter.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/font/InMemoryFontStore.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/font/InMemoryFontFactory.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/font/FontController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/font/FontsCreateController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/font/FontsGetController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/font/FontsListController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/font/FontsPagedListController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/font/FontsUpdateController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/font/FontsDeleteController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/font/FontDtos.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/config/font/FontComposition.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "docs/domains/font.md",
          "optional": false,
          "exists": false
        },
        {
          "path": "docs/api/openapi/paths/font-*.yaml",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/font/model/FontTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/font/model/FontValidationTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/font/usecase/CreateFontUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/font/usecase/CreateFontUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/font/usecase/GetAllFontsUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/font/usecase/GetFontByIdUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/font/usecase/GetFontByIdUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/font/usecase/UpdateFontUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/font/usecase/UpdateFontUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/font/usecase/DeleteFontUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/font/usecase/DeleteFontUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/font/FontControllerTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/font/FontControllerNegativeTest.java",
          "optional": false,
          "exists": true
        }
      ],
      "missing": [
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/font/FontsCreateController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/font/FontsGetController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/font/FontsListController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/font/FontsPagedListController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/font/FontsUpdateController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/font/FontsDeleteController.java",
        "docs/domains/font.md",
        "docs/api/openapi/paths/font-*.yaml"
      ]
    },
    {
      "feature": "i18n",
      "expected": [
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/i18n/model/I18n.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/i18n/model/value/*",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/i18n/port/I18nQueryPort.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/i18n/port/I18nCommandPort.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/i18n/usecase/GetAllI18nsUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/i18n/usecase/GetI18nByIdUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/i18n/usecase/CreateI18nUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/i18n/usecase/UpdateI18nUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/i18n/usecase/DeleteI18nUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/i18n/I18nEntity.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/i18n/I18nJpaRepository.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/i18n/I18nJpaMapper.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/i18n/I18nJpaAdapter.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/i18n/InMemoryI18nAdapter.java",
          "optional": true,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/i18n/InMemoryI18nStore.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/i18n/InMemoryI18nFactory.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/i18n/I18nController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/i18n/I18nsCreateController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/i18n/I18nsGetController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/i18n/I18nsListController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/i18n/I18nsPagedListController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/i18n/I18nsUpdateController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/i18n/I18nsDeleteController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/i18n/I18nDtos.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/config/i18n/I18nComposition.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "docs/domains/i18n.md",
          "optional": false,
          "exists": false
        },
        {
          "path": "docs/api/openapi/paths/i18n-*.yaml",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/i18n/model/I18nTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/i18n/model/I18nValidationTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/i18n/usecase/CreateI18nUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/i18n/usecase/CreateI18nUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/i18n/usecase/GetAllI18nsUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/i18n/usecase/GetI18nByIdUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/i18n/usecase/GetI18nByIdUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/i18n/usecase/UpdateI18nUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/i18n/usecase/UpdateI18nUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/i18n/usecase/DeleteI18nUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/i18n/usecase/DeleteI18nUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/i18n/I18nControllerTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/i18n/I18nControllerNegativeTest.java",
          "optional": false,
          "exists": true
        }
      ],
      "missing": [
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/i18n/I18nsCreateController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/i18n/I18nsGetController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/i18n/I18nsListController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/i18n/I18nsPagedListController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/i18n/I18nsUpdateController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/i18n/I18nsDeleteController.java",
        "docs/domains/i18n.md",
        "docs/api/openapi/paths/i18n-*.yaml"
      ]
    },
    {
      "feature": "membership",
      "expected": [
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/membership/model/Membership.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/membership/model/value/*",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/membership/port/MembershipQueryPort.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/membership/port/MembershipCommandPort.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/membership/usecase/GetAllMembershipsUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/membership/usecase/GetMembershipByIdUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/membership/usecase/CreateMembershipUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/membership/usecase/UpdateMembershipUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/membership/usecase/DeleteMembershipUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/membership/MembershipEntity.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/membership/MembershipJpaRepository.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/membership/MembershipJpaMapper.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/membership/MembershipJpaAdapter.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/membership/InMemoryMembershipAdapter.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/membership/InMemoryMembershipStore.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/membership/InMemoryMembershipFactory.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/membership/MembershipController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/membership/MembershipsCreateController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/membership/MembershipsGetController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/membership/MembershipsListController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/membership/MembershipsPagedListController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/membership/MembershipsUpdateController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/membership/MembershipsDeleteController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/membership/MembershipDtos.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/config/membership/MembershipComposition.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "docs/domains/membership.md",
          "optional": false,
          "exists": false
        },
        {
          "path": "docs/api/openapi/paths/membership-*.yaml",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/membership/model/MembershipTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/membership/model/MembershipValidationTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/membership/usecase/CreateMembershipUseCaseTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/membership/usecase/CreateMembershipUseCaseNegativeTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/membership/usecase/GetAllMembershipsUseCaseTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/membership/usecase/GetMembershipByIdUseCaseTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/membership/usecase/GetMembershipByIdUseCaseNegativeTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/membership/usecase/UpdateMembershipUseCaseTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/membership/usecase/UpdateMembershipUseCaseNegativeTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/membership/usecase/DeleteMembershipUseCaseTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/membership/usecase/DeleteMembershipUseCaseNegativeTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/membership/MembershipControllerTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/membership/MembershipControllerNegativeTest.java",
          "optional": false,
          "exists": false
        }
      ],
      "missing": [
        "docs/domains/membership.md",
        "docs/api/openapi/paths/membership-*.yaml",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/membership/model/MembershipTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/membership/model/MembershipValidationTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/membership/usecase/CreateMembershipUseCaseTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/membership/usecase/CreateMembershipUseCaseNegativeTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/membership/usecase/GetAllMembershipsUseCaseTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/membership/usecase/GetMembershipByIdUseCaseTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/membership/usecase/GetMembershipByIdUseCaseNegativeTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/membership/usecase/UpdateMembershipUseCaseTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/membership/usecase/UpdateMembershipUseCaseNegativeTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/membership/usecase/DeleteMembershipUseCaseTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/membership/usecase/DeleteMembershipUseCaseNegativeTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/membership/MembershipControllerTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/membership/MembershipControllerNegativeTest.java"
      ]
    },
    {
      "feature": "sellercode",
      "expected": [
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/sellercode/model/Sellercode.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/sellercode/model/value/*",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/sellercode/port/SellercodeQueryPort.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/sellercode/port/SellercodeCommandPort.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/sellercode/usecase/GetAllSellercodesUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/sellercode/usecase/GetSellercodeByIdUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/sellercode/usecase/CreateSellercodeUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/sellercode/usecase/UpdateSellercodeUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/sellercode/usecase/DeleteSellercodeUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/sellercode/SellercodeEntity.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/sellercode/SellercodeJpaRepository.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/sellercode/SellercodeJpaMapper.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/sellercode/SellercodeJpaAdapter.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/sellercode/InMemorySellercodeAdapter.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/sellercode/InMemorySellercodeStore.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/sellercode/InMemorySellercodeFactory.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/sellercode/SellercodeController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/sellercode/SellercodesCreateController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/sellercode/SellercodesGetController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/sellercode/SellercodesListController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/sellercode/SellercodesPagedListController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/sellercode/SellercodesUpdateController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/sellercode/SellercodesDeleteController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/sellercode/SellercodeDtos.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/config/sellercode/SellercodeComposition.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "docs/domains/sellercode.md",
          "optional": false,
          "exists": false
        },
        {
          "path": "docs/api/openapi/paths/sellercode-*.yaml",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/sellercode/model/SellercodeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/sellercode/model/SellercodeValidationTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/sellercode/usecase/CreateSellercodeUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/sellercode/usecase/CreateSellercodeUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/sellercode/usecase/GetAllSellercodesUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/sellercode/usecase/GetSellercodeByIdUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/sellercode/usecase/GetSellercodeByIdUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/sellercode/usecase/UpdateSellercodeUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/sellercode/usecase/UpdateSellercodeUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/sellercode/usecase/DeleteSellercodeUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/sellercode/usecase/DeleteSellercodeUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/sellercode/SellercodeControllerTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/sellercode/SellercodeControllerNegativeTest.java",
          "optional": false,
          "exists": true
        }
      ],
      "missing": [
        "docs/domains/sellercode.md",
        "docs/api/openapi/paths/sellercode-*.yaml"
      ]
    },
    {
      "feature": "subscription",
      "expected": [
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/subscription/model/Subscription.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/subscription/model/value/*",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/subscription/port/SubscriptionQueryPort.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/subscription/port/SubscriptionCommandPort.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/subscription/usecase/GetAllSubscriptionsUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/subscription/usecase/GetSubscriptionByIdUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/subscription/usecase/CreateSubscriptionUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/subscription/usecase/UpdateSubscriptionUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/subscription/usecase/DeleteSubscriptionUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/subscription/SubscriptionEntity.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/subscription/SubscriptionJpaRepository.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/subscription/SubscriptionJpaMapper.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/subscription/SubscriptionJpaAdapter.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/subscription/InMemorySubscriptionAdapter.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/subscription/InMemorySubscriptionStore.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/subscription/InMemorySubscriptionFactory.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/subscription/SubscriptionController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/subscription/SubscriptionsCreateController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/subscription/SubscriptionsGetController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/subscription/SubscriptionsListController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/subscription/SubscriptionsPagedListController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/subscription/SubscriptionsUpdateController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/subscription/SubscriptionsDeleteController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/subscription/SubscriptionDtos.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/config/subscription/SubscriptionComposition.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "docs/domains/subscription.md",
          "optional": false,
          "exists": false
        },
        {
          "path": "docs/api/openapi/paths/subscription-*.yaml",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/subscription/model/SubscriptionTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/subscription/model/SubscriptionValidationTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/subscription/usecase/CreateSubscriptionUseCaseTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/subscription/usecase/CreateSubscriptionUseCaseNegativeTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/subscription/usecase/GetAllSubscriptionsUseCaseTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/subscription/usecase/GetSubscriptionByIdUseCaseTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/subscription/usecase/GetSubscriptionByIdUseCaseNegativeTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/subscription/usecase/UpdateSubscriptionUseCaseTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/subscription/usecase/UpdateSubscriptionUseCaseNegativeTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/subscription/usecase/DeleteSubscriptionUseCaseTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/subscription/usecase/DeleteSubscriptionUseCaseNegativeTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/subscription/SubscriptionControllerTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/subscription/SubscriptionControllerNegativeTest.java",
          "optional": false,
          "exists": false
        }
      ],
      "missing": [
        "docs/domains/subscription.md",
        "docs/api/openapi/paths/subscription-*.yaml",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/subscription/model/SubscriptionTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/subscription/model/SubscriptionValidationTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/subscription/usecase/CreateSubscriptionUseCaseTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/subscription/usecase/CreateSubscriptionUseCaseNegativeTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/subscription/usecase/GetAllSubscriptionsUseCaseTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/subscription/usecase/GetSubscriptionByIdUseCaseTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/subscription/usecase/GetSubscriptionByIdUseCaseNegativeTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/subscription/usecase/UpdateSubscriptionUseCaseTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/subscription/usecase/UpdateSubscriptionUseCaseNegativeTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/subscription/usecase/DeleteSubscriptionUseCaseTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/subscription/usecase/DeleteSubscriptionUseCaseNegativeTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/subscription/SubscriptionControllerTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/subscription/SubscriptionControllerNegativeTest.java"
      ]
    },
    {
      "feature": "theme",
      "expected": [
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/theme/model/Theme.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/theme/model/value/*",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/theme/port/ThemeQueryPort.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/theme/port/ThemeCommandPort.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/theme/usecase/GetAllThemesUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/theme/usecase/GetThemeByIdUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/theme/usecase/CreateThemeUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/theme/usecase/UpdateThemeUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/theme/usecase/DeleteThemeUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/theme/ThemeEntity.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/theme/ThemeJpaRepository.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/theme/ThemeJpaMapper.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/theme/ThemeJpaAdapter.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/theme/InMemoryThemeAdapter.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/theme/InMemoryThemeStore.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/theme/InMemoryThemeFactory.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/theme/ThemeController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/theme/ThemesCreateController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/theme/ThemesGetController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/theme/ThemesListController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/theme/ThemesPagedListController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/theme/ThemesUpdateController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/theme/ThemesDeleteController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/theme/ThemeDtos.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/config/theme/ThemeComposition.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "docs/domains/theme.md",
          "optional": false,
          "exists": false
        },
        {
          "path": "docs/api/openapi/paths/theme-*.yaml",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/theme/model/ThemeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/theme/model/ThemeValidationTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/theme/usecase/CreateThemeUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/theme/usecase/CreateThemeUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/theme/usecase/GetAllThemesUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/theme/usecase/GetThemeByIdUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/theme/usecase/GetThemeByIdUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/theme/usecase/UpdateThemeUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/theme/usecase/UpdateThemeUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/theme/usecase/DeleteThemeUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/theme/usecase/DeleteThemeUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/theme/ThemeControllerTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/theme/ThemeControllerNegativeTest.java",
          "optional": false,
          "exists": true
        }
      ],
      "missing": [
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/theme/ThemesCreateController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/theme/ThemesGetController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/theme/ThemesListController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/theme/ThemesPagedListController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/theme/ThemesUpdateController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/theme/ThemesDeleteController.java",
        "docs/domains/theme.md",
        "docs/api/openapi/paths/theme-*.yaml"
      ]
    },
    {
      "feature": "user",
      "expected": [
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/user/model/User.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/user/model/value/*",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/user/port/UserQueryPort.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/user/port/UserCommandPort.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/user/usecase/GetAllUsersUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/user/usecase/GetUserByIdUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/user/usecase/CreateUserUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/user/usecase/UpdateUserUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/user/usecase/DeleteUserUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/user/UserEntity.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/user/UserJpaRepository.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/user/UserJpaMapper.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/user/UserJpaAdapter.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/user/InMemoryUserAdapter.java",
          "optional": true,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/user/InMemoryUserStore.java",
          "optional": true,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/user/InMemoryUserFactory.java",
          "optional": true,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/user/UserController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/user/UsersCreateController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/user/UsersGetController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/user/UsersListController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/user/UsersPagedListController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/user/UsersUpdateController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/user/UsersDeleteController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/user/UserDtos.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/config/user/UserComposition.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "docs/domains/user.md",
          "optional": false,
          "exists": false
        },
        {
          "path": "docs/api/openapi/paths/user-*.yaml",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/user/model/UserTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/user/model/UserValidationTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/user/usecase/CreateUserUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/user/usecase/CreateUserUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/user/usecase/GetAllUsersUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/user/usecase/GetUserByIdUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/user/usecase/GetUserByIdUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/user/usecase/UpdateUserUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/user/usecase/UpdateUserUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/user/usecase/DeleteUserUseCaseTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/user/usecase/DeleteUserUseCaseNegativeTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/user/UserControllerTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/user/UserControllerNegativeTest.java",
          "optional": false,
          "exists": true
        }
      ],
      "missing": [
        "docs/domains/user.md",
        "docs/api/openapi/paths/user-*.yaml"
      ]
    },
    {
      "feature": "zone",
      "expected": [
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/zone/model/Zone.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/domain/zone/model/value/*",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/zone/port/ZoneQueryPort.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/zone/port/ZoneCommandPort.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/zone/usecase/GetAllZonesUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/zone/usecase/GetZoneByIdUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/zone/usecase/CreateZoneUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/zone/usecase/UpdateZoneUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/application/zone/usecase/DeleteZoneUseCase.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/zone/ZoneEntity.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/zone/ZoneJpaRepository.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/zone/ZoneJpaMapper.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/jpa/zone/ZoneJpaAdapter.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/zone/InMemoryZoneAdapter.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/zone/InMemoryZoneStore.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/infrastructure/memory/zone/InMemoryZoneFactory.java",
          "optional": true,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/zone/ZoneController.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/zone/ZonesCreateController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/zone/ZonesGetController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/zone/ZonesListController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/zone/ZonesPagedListController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/zone/ZonesUpdateController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/zone/ZonesDeleteController.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/zone/ZoneDtos.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/main/java/com/poetry/poetry_backend/config/zone/ZoneComposition.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "docs/domains/zone.md",
          "optional": false,
          "exists": false
        },
        {
          "path": "docs/api/openapi/paths/zone-*.yaml",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/zone/model/ZoneTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/domain/zone/model/ZoneValidationTest.java",
          "optional": false,
          "exists": true
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/zone/usecase/CreateZoneUseCaseTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/zone/usecase/CreateZoneUseCaseNegativeTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/zone/usecase/GetAllZonesUseCaseTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/zone/usecase/GetZoneByIdUseCaseTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/zone/usecase/GetZoneByIdUseCaseNegativeTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/zone/usecase/UpdateZoneUseCaseTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/zone/usecase/UpdateZoneUseCaseNegativeTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/zone/usecase/DeleteZoneUseCaseTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/application/zone/usecase/DeleteZoneUseCaseNegativeTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/zone/ZoneControllerTest.java",
          "optional": false,
          "exists": false
        },
        {
          "path": "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/zone/ZoneControllerNegativeTest.java",
          "optional": false,
          "exists": false
        }
      ],
      "missing": [
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/zone/ZonesCreateController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/zone/ZonesGetController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/zone/ZonesListController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/zone/ZonesPagedListController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/zone/ZonesUpdateController.java",
        "poetry-backend/src/main/java/com/poetry/poetry_backend/interfaces/v1/zone/ZonesDeleteController.java",
        "docs/domains/zone.md",
        "docs/api/openapi/paths/zone-*.yaml",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/zone/usecase/CreateZoneUseCaseTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/zone/usecase/CreateZoneUseCaseNegativeTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/zone/usecase/GetAllZonesUseCaseTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/zone/usecase/GetZoneByIdUseCaseTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/zone/usecase/GetZoneByIdUseCaseNegativeTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/zone/usecase/UpdateZoneUseCaseTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/zone/usecase/UpdateZoneUseCaseNegativeTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/zone/usecase/DeleteZoneUseCaseTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/application/zone/usecase/DeleteZoneUseCaseNegativeTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/zone/ZoneControllerTest.java",
        "poetry-backend/src/test/java/com/poetry/poetry_backend/interfaces/v1/zone/ZoneControllerNegativeTest.java"
      ]
    }
  ]
}